{"version":3,"sources":["../../src/ionic-image-loader/src/providers/image-loader.ts","../../src/ionic-image-loader/src/index.ts","../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/ionic-image-loader/src/components/img-loader.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/ionic-image-loader/src/image-loader.module.ts","../../src/app/app.component.ts","../../src/ionic-image-loader/src/providers/image-loader-config.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { HttpClient }             from '@angular/common/http';\nimport { Injectable }             from '@angular/core';\nimport { File, FileEntry }        from '@ionic-native/file';\nimport { normalizeURL, Platform } from 'ionic-angular';\nimport { fromEvent }              from 'rxjs/observable/fromEvent';\nimport { first }                  from 'rxjs/operators';\n\nimport { ImageLoaderConfig } from './image-loader-config';\n\ninterface IndexItem {\n  name: string;\n  modificationTime: Date;\n  size: number;\n}\n\ninterface QueueItem {\n  imageUrl: string;\n  resolve: Function;\n  reject: Function;\n}\n\n@Injectable()\nexport class ImageLoader {\n  /**\n   * Indicates if the cache service is ready.\n   * When the cache service isn't ready, images are loaded via browser instead.\n   * @type {boolean}\n   */\n  private isCacheReady = false;\n  /**\n   * Indicates if this service is initialized.\n   * This service is initialized once all the setup is done.\n   * @type {boolean}\n   */\n  private isInit = false;\n  /**\n   * Number of concurrent requests allowed\n   * @type {number}\n   */\n  private concurrency = 5;\n  /**\n   * Queue items\n   * @type {Array}\n   */\n  private queue: QueueItem[] = [];\n  private processing = 0;\n  /**\n   * Fast accessible Object for currently processing items\n   */\n  private currentlyProcessing: { [index: string]: Promise<any> } = {};\n  private cacheIndex: IndexItem[] = [];\n  private currentCacheSize = 0;\n  private indexed = false;\n\n  constructor(\n    private config: ImageLoaderConfig,\n    private file: File,\n    private http: HttpClient,\n    private platform: Platform,\n  ) {\n    if (!platform.is('cordova')) {\n      // we are running on a browser, or using livereload\n      // plugin will not function in this case\n      this.isInit = true;\n      this.throwWarning(\n        'You are running on a browser or using livereload, IonicImageLoader will not function, falling back to browser loading.',\n      );\n    } else {\n      fromEvent(document, 'deviceready')\n        .pipe(first())\n        .subscribe(res => {\n          if (this.nativeAvailable) {\n            this.initCache();\n          } else {\n            // we are running on a browser, or using livereload\n            // plugin will not function in this case\n            this.isInit = true;\n            this.throwWarning(\n              'You are running on a browser or using livereload, IonicImageLoader will not function, falling back to browser loading.',\n            );\n          }\n        });\n    }\n  }\n\n  get nativeAvailable(): boolean {\n    return File.installed();\n  }\n\n  private get isCacheSpaceExceeded(): boolean {\n    return (\n      this.config.maxCacheSize > -1 &&\n      this.currentCacheSize > this.config.maxCacheSize\n    );\n  }\n\n  private get isWKWebView(): boolean {\n    return (\n      this.platform.is('ios') &&\n      (<any>window).webkit &&\n      (<any>window).webkit.messageHandlers\n    );\n  }\n\n  private get isIonicWKWebView(): boolean {\n    return (\n      this.isWKWebView &&\n      (location.host === 'localhost:8080' || (<any>window).LiveReload)\n    );\n  }\n\n  private get isDevServer(): boolean {\n    return window['IonicDevServer'] !== undefined;\n  }\n\n  /**\n   * Check if we can process more items in the queue\n   * @returns {boolean}\n   */\n  private get canProcess(): boolean {\n    return this.queue.length > 0 && this.processing < this.concurrency;\n  }\n\n  /**\n   * Preload an image\n   * @param {string} imageUrl Image URL\n   * @returns {Promise<string>} returns a promise that resolves with the cached image URL\n   */\n  preload(imageUrl: string): Promise<string> {\n    return this.getImagePath(imageUrl);\n  }\n\n  /**\n   * Clears the cache\n   */\n  clearCache(): void {\n    if (!this.platform.is('cordova')) {\n      return;\n    }\n\n    const clear = () => {\n      if (!this.isInit) {\n        // do not run this method until our service is initialized\n        setTimeout(clear.bind(this), 500);\n        return;\n      }\n\n      // pause any operations\n      this.isInit = false;\n\n      this.file\n        .removeRecursively(\n          this.file.cacheDirectory,\n          this.config.cacheDirectoryName,\n        )\n        .then(() => {\n          if (this.isWKWebView && !this.isIonicWKWebView) {\n            // also clear the temp files\n            this.file\n              .removeRecursively(\n                this.file.tempDirectory,\n                this.config.cacheDirectoryName,\n              )\n              .catch(error => {\n                // Noop catch. Removing the tempDirectory might fail,\n                // as it is not persistent.\n              })\n              .then(() => {\n                this.initCache(true);\n              });\n          } else {\n            this.initCache(true);\n          }\n        })\n        .catch(this.throwError.bind(this));\n    };\n\n    clear();\n  }\n\n  /**\n   * Gets the filesystem path of an image.\n   * This will return the remote path if anything goes wrong or if the cache service isn't ready yet.\n   * @param {string} imageUrl The remote URL of the image\n   * @returns {Promise<string>} Returns a promise that will always resolve with an image URL\n   */\n  getImagePath(imageUrl: string): Promise<string> {\n    if (typeof imageUrl !== 'string' || imageUrl.length <= 0) {\n      return Promise.reject('The image url provided was empty or invalid.');\n    }\n\n    return new Promise<string>((resolve, reject) => {\n      const getImage = () => {\n        if (this.isImageUrlRelative(imageUrl)) {\n          resolve(imageUrl);\n        } else {\n          this.getCachedImagePath(imageUrl)\n            .then(resolve)\n            .catch(() => {\n              // image doesn't exist in cache, lets fetch it and save it\n              this.addItemToQueue(imageUrl, resolve, reject);\n            });\n        }\n      };\n\n      const check = () => {\n        if (this.isInit) {\n          if (this.isCacheReady) {\n            getImage();\n          } else {\n            this.throwWarning(\n              'The cache system is not running. Images will be loaded by your browser instead.',\n            );\n            resolve(imageUrl);\n          }\n        } else {\n          setTimeout(() => check(), 250);\n        }\n      };\n\n      check();\n    });\n  }\n\n  /**\n   * Returns if an imageUrl is an relative path\n   * @param {string} imageUrl\n   */\n  private isImageUrlRelative(imageUrl: string) {\n    return !/^(https?|file):\\/\\/\\/?/i.test(imageUrl);\n  }\n\n  /**\n   * Add an item to the queue\n   * @param {string} imageUrl\n   * @param resolve\n   * @param reject\n   */\n  private addItemToQueue(imageUrl: string, resolve, reject): void {\n    this.queue.push({\n      imageUrl,\n      resolve,\n      reject,\n    });\n\n    this.processQueue();\n  }\n\n  /**\n   * Processes one item from the queue\n   */\n  private processQueue() {\n    // make sure we can process items first\n    if (!this.canProcess) {\n      return;\n    }\n\n    // increase the processing number\n    this.processing++;\n\n    // take the first item from queue\n    const currentItem: QueueItem = this.queue.splice(0, 1)[0];\n    if (this.currentlyProcessing[currentItem.imageUrl] === undefined) {\n      this.currentlyProcessing[currentItem.imageUrl] = new Promise(\n        (resolve, reject) => {\n          // process more items concurrently if we can\n          if (this.canProcess) {\n            this.processQueue();\n          }\n\n          // function to call when done processing this item\n          // this will reduce the processing number\n          // then will execute this function again to process any remaining items\n          const done = () => {\n            this.processing--;\n            this.processQueue();\n\n            if (this.currentlyProcessing[currentItem.imageUrl] !== undefined) {\n              delete this.currentlyProcessing[currentItem.imageUrl];\n            }\n          };\n\n          const error = e => {\n            currentItem.reject();\n            this.throwError(e);\n            done();\n          };\n\n          const localDir =\n            this.file.cacheDirectory + this.config.cacheDirectoryName + '/';\n          const fileName = this.createFileName(currentItem.imageUrl);\n\n          this.http\n            .get(currentItem.imageUrl, {\n              responseType: 'blob',\n              headers: this.config.httpHeaders,\n            })\n            .subscribe(\n              (data: Blob) => {\n                this.file\n                  .writeFile(localDir, fileName, data, {replace: true})\n                  .then((file: FileEntry) => {\n                    if (this.isCacheSpaceExceeded) {\n                      this.maintainCacheSize();\n                    }\n                    this.addFileToIndex(file).then(() => {\n                      this.getCachedImagePath(currentItem.imageUrl).then(\n                        localUrl => {\n                          currentItem.resolve(localUrl);\n                          resolve();\n                          done();\n                          this.maintainCacheSize();\n                        },\n                      );\n                    });\n                  })\n                  .catch(e => {\n                    // Could not write image\n                    error(e);\n                  });\n              },\n              e => {\n                // Could not get image via httpClient\n                error(e);\n              },\n            );\n        },\n      );\n    } else {\n      // Prevented same Image from loading at the same time\n      this.currentlyProcessing[currentItem.imageUrl].then(() => {\n        this.getCachedImagePath(currentItem.imageUrl).then(localUrl => {\n          currentItem.resolve(localUrl);\n        });\n      });\n    }\n  }\n\n  /**\n   * Initialize the cache service\n   * @param [boolean] replace Whether to replace the cache directory if it already exists\n   */\n  private initCache(replace?: boolean): void {\n    this.concurrency = this.config.concurrency;\n\n    // create cache directories if they do not exist\n    this.createCacheDirectory(replace)\n      .catch(e => {\n        this.throwError(e);\n        this.isInit = true;\n      })\n      .then(() => this.indexCache())\n      .then(() => {\n        this.isCacheReady = true;\n        this.isInit = true;\n      });\n  }\n\n  /**\n   * Adds a file to index.\n   * Also deletes any files if they are older than the set maximum cache age.\n   * @param {FileEntry} file File to index\n   * @returns {Promise<any>}\n   */\n  private addFileToIndex(file: FileEntry): Promise<any> {\n    return new Promise<any>((resolve, reject) =>\n      file.getMetadata(resolve, reject),\n    ).then(metadata => {\n      if (\n        this.config.maxCacheAge > -1 &&\n        Date.now() - metadata.modificationTime.getTime() >\n        this.config.maxCacheAge\n      ) {\n        // file age exceeds maximum cache age\n        return this.removeFile(file.name);\n      } else {\n        // file age doesn't exceed maximum cache age, or maximum cache age isn't set\n        this.currentCacheSize += metadata.size;\n\n        // add item to index\n        this.cacheIndex.push({\n          name: file.name,\n          modificationTime: metadata.modificationTime,\n          size: metadata.size,\n        });\n\n        return Promise.resolve();\n      }\n    });\n  }\n\n  /**\n   * Indexes the cache if necessary\n   * @returns {Promise<void>}\n   */\n  private indexCache(): Promise<void> {\n    this.cacheIndex = [];\n\n    return this.file\n      .listDir(this.file.cacheDirectory, this.config.cacheDirectoryName)\n      .then(files => Promise.all(files.map(this.addFileToIndex.bind(this))))\n      .then(() => {\n        // Sort items by date. Most recent to oldest.\n        this.cacheIndex = this.cacheIndex.sort(\n          (a: IndexItem, b: IndexItem): number => (a > b ? -1 : a < b ? 1 : 0),\n        );\n        this.indexed = true;\n        return Promise.resolve();\n      })\n      .catch(e => {\n        this.throwError(e);\n        return Promise.resolve();\n      });\n  }\n\n  /**\n   * This method runs every time a new file is added.\n   * It checks the cache size and ensures that it doesn't exceed the maximum cache size set in the config.\n   * If the limit is reached, it will delete old images to create free space.\n   */\n  private maintainCacheSize(): void {\n    if (this.config.maxCacheSize > -1 && this.indexed) {\n      const maintain = () => {\n        if (this.currentCacheSize > this.config.maxCacheSize) {\n          // called when item is done processing\n          const next: Function = () => {\n            this.currentCacheSize -= file.size;\n            maintain();\n          };\n\n          // grab the first item in index since it's the oldest one\n          const file: IndexItem = this.cacheIndex.splice(0, 1)[0];\n\n          if (typeof file === 'undefined') {\n            return maintain();\n          }\n\n          // delete the file then process next file if necessary\n          this.removeFile(file.name)\n            .then(() => next())\n            .catch(() => next()); // ignore errors, nothing we can do about it\n        }\n      };\n\n      maintain();\n    }\n  }\n\n  /**\n   * Remove a file\n   * @param {string} file The name of the file to remove\n   * @returns {Promise<any>}\n   */\n  private removeFile(file: string): Promise<any> {\n    return this.file\n      .removeFile(\n        this.file.cacheDirectory + this.config.cacheDirectoryName,\n        file,\n      )\n      .then(() => {\n        if (this.isWKWebView && !this.isIonicWKWebView) {\n          return this.file\n            .removeFile(\n              this.file.tempDirectory + this.config.cacheDirectoryName,\n              file,\n            )\n            .catch(() => {\n              // Noop catch. Removing the files from tempDirectory might fail, as it is not persistent.\n            });\n        }\n      });\n  }\n\n  /**\n   * Get the local path of a previously cached image if exists\n   * @param {string} url The remote URL of the image\n   * @returns {Promise<string>} Returns a promise that resolves with the local path if exists, or rejects if doesn't exist\n   */\n  private getCachedImagePath(url: string): Promise<string> {\n    return new Promise<string>((resolve, reject) => {\n      // make sure cache is ready\n      if (!this.isCacheReady) {\n        return reject();\n      }\n\n      // if we're running with livereload, ignore cache and call the resource from it's URL\n      if (this.isDevServer) {\n        return resolve(url);\n      }\n\n      // get file name\n      const fileName = this.createFileName(url);\n\n      // get full path\n      const dirPath = this.file.cacheDirectory + this.config.cacheDirectoryName,\n        tempDirPath = this.file.tempDirectory + this.config.cacheDirectoryName;\n\n      // check if exists\n      this.file\n        .resolveLocalFilesystemUrl(dirPath + '/' + fileName)\n        .then((fileEntry: FileEntry) => {\n          // file exists in cache\n\n          if (this.config.imageReturnType === 'base64') {\n            // read the file as data url and return the base64 string.\n            // should always be successful as the existence of the file\n            // is already ensured\n            this.file\n              .readAsDataURL(dirPath, fileName)\n              .then((base64: string) => {\n                base64 = base64.replace('data:null', 'data:*/*');\n                resolve(base64);\n              })\n              .catch(reject);\n          } else if (this.config.imageReturnType === 'uri') {\n            // now check if iOS device & using WKWebView Engine.\n            // in this case only the tempDirectory is accessible,\n            // therefore the file needs to be copied into that directory first!\n            if (this.isIonicWKWebView) {\n              // Use Ionic normalizeUrl to generate the right URL for Ionic WKWebView\n              resolve(normalizeURL(fileEntry.nativeURL));\n            } else if (this.isWKWebView) {\n              // check if file already exists in temp directory\n              this.file\n                .resolveLocalFilesystemUrl(tempDirPath + '/' + fileName)\n                .then((tempFileEntry: FileEntry) => {\n                  // file exists in temp directory\n                  // return native path\n                  resolve(tempFileEntry.nativeURL);\n                })\n                .catch(() => {\n                  // file does not yet exist in the temp directory.\n                  // copy it!\n                  this.file\n                    .copyFile(dirPath, fileName, tempDirPath, fileName)\n                    .then((tempFileEntry: FileEntry) => {\n                      // now the file exists in the temp directory\n                      // return native path\n                      resolve(tempFileEntry.nativeURL);\n                    })\n                    .catch(reject);\n                });\n            } else {\n              // return native path\n              resolve(fileEntry.nativeURL);\n            }\n          }\n        })\n        .catch(reject); // file doesn't exist\n    });\n  }\n\n  /**\n   * Throws a console error if debug mode is enabled\n   * @param {any[]} args Error message\n   */\n  private throwError(...args: any[]): void {\n    if (this.config.debugMode) {\n      args.unshift('ImageLoader Error: ');\n      console.error.apply(console, args);\n    }\n  }\n\n  /**\n   * Throws a console warning if debug mode is enabled\n   * @param {any[]} args Error message\n   */\n  private throwWarning(...args: any[]): void {\n    if (this.config.debugMode) {\n      args.unshift('ImageLoader Warning: ');\n      console.warn.apply(console, args);\n    }\n  }\n\n  /**\n   * Check if the cache directory exists\n   * @param directory {string} The directory to check. Either this.file.tempDirectory or this.file.cacheDirectory\n   * @returns {Promise<boolean|FileError>} Returns a promise that resolves if exists, and rejects if it doesn't\n   */\n  private cacheDirectoryExists(directory: string): Promise<boolean> {\n    return this.file.checkDir(directory, this.config.cacheDirectoryName);\n  }\n\n  /**\n   * Create the cache directories\n   * @param replace {boolean} override directory if exists\n   * @returns {Promise<DirectoryEntry|FileError>} Returns a promise that resolves if the directories were created, and rejects on error\n   */\n  private createCacheDirectory(replace: boolean = false): Promise<any> {\n    let cacheDirectoryPromise: Promise<any>, tempDirectoryPromise: Promise<any>;\n\n    if (replace) {\n      // create or replace the cache directory\n      cacheDirectoryPromise = this.file.createDir(\n        this.file.cacheDirectory,\n        this.config.cacheDirectoryName,\n        replace,\n      );\n    } else {\n      // check if the cache directory exists.\n      // if it does not exist create it!\n      cacheDirectoryPromise = this.cacheDirectoryExists(\n        this.file.cacheDirectory,\n      ).catch(() =>\n        this.file.createDir(\n          this.file.cacheDirectory,\n          this.config.cacheDirectoryName,\n          false,\n        ),\n      );\n    }\n\n    if (this.isWKWebView && !this.isIonicWKWebView) {\n      if (replace) {\n        // create or replace the temp directory\n        tempDirectoryPromise = this.file.createDir(\n          this.file.tempDirectory,\n          this.config.cacheDirectoryName,\n          replace,\n        );\n      } else {\n        // check if the temp directory exists.\n        // if it does not exist create it!\n        tempDirectoryPromise = this.cacheDirectoryExists(\n          this.file.tempDirectory,\n        ).catch(() =>\n          this.file.createDir(\n            this.file.tempDirectory,\n            this.config.cacheDirectoryName,\n            false,\n          ),\n        );\n      }\n    } else {\n      tempDirectoryPromise = Promise.resolve();\n    }\n\n    return Promise.all([cacheDirectoryPromise, tempDirectoryPromise]);\n  }\n\n  /**\n   * Creates a unique file name out of the URL\n   * @param {string} url URL of the file\n   * @returns {string} Unique file name\n   */\n  private createFileName(url: string): string {\n    // hash the url to get a unique file name\n    return (\n      this.hashString(url).toString() +\n      (this.config.fileNameCachedWithExtension\n        ? this.getExtensionFromFileName(url)\n        : '')\n    );\n  }\n\n  /**\n   * Converts a string to a unique 32-bit int\n   * @param {string} string string to hash\n   * @returns {number} 32-bit int\n   */\n  private hashString(string: string): number {\n    let hash = 0,\n      char;\n    if (string.length === 0) {\n      return hash;\n    }\n    for (let i = 0; i < string.length; i++) {\n      char = string.charCodeAt(i);\n      // tslint:disable-next-line\n      hash = (hash << 5) - hash + char;\n      // tslint:disable-next-line\n      hash = hash & hash;\n    }\n    return hash;\n  }\n\n  /**\n   * extract extension from filename or url\n   *\n   * @param {string} filename\n   * @returns {string}\n   */\n  private getExtensionFromFileName(filename: string): string {\n    return (\n      // tslint:disable-next-line\n      filename.substr((~-filename.lastIndexOf('.') >>> 0) + 1) ||\n      this.config.fallbackFileNameCachedExtension\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/ionic-image-loader/src/providers/image-loader.ts","export * from './image-loader.module';\nexport * from './components/img-loader';\nexport * from './providers/image-loader-config';\nexport * from './components/image-attribute';\nexport * from './providers/image-loader';\n\n\n\n// WEBPACK FOOTER //\n// ./src/ionic-image-loader/src/index.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 138;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 138\n// module chunks = 7","var map = {\n\t\"../pages/avatars/avatars.module\": [\n\t\t401,\n\t\t5\n\t],\n\t\"../pages/cards/cards.module\": [\n\t\t402,\n\t\t4\n\t],\n\t\"../pages/concurrency/concurrency.module\": [\n\t\t403,\n\t\t3\n\t],\n\t\"../pages/home/home.module\": [\n\t\t404,\n\t\t6\n\t],\n\t\"../pages/ng-content/ng-content.module\": [\n\t\t405,\n\t\t2\n\t],\n\t\"../pages/slider/slider.module\": [\n\t\t406,\n\t\t1\n\t],\n\t\"../pages/virtual-scroll/virtual-scroll.module\": [\n\t\t407,\n\t\t0\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 182;\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 182\n// module chunks = 7","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  Renderer2,\n} from '@angular/core';\n\nimport { ImageLoader }       from '../providers/image-loader';\nimport { ImageLoaderConfig } from '../providers/image-loader-config';\nimport { ImageAttribute }    from './image-attribute';\n\nconst propMap: any = {\n  display: 'display',\n  height: 'height',\n  width: 'width',\n  backgroundSize: 'background-size',\n  backgroundRepeat: 'background-repeat',\n};\n\n@Component({\n  selector: 'img-loader',\n  template:\n    '<ion-spinner *ngIf=\"spinner && isLoading && !fallbackAsPlaceholder\" [name]=\"spinnerName\" [color]=\"spinnerColor\"></ion-spinner>' +\n    '<ng-content></ng-content>',\n  styles: [\n    'ion-spinner { float: none; margin-left: auto; margin-right: auto; display: block; }',\n  ],\n})\nexport class ImgLoaderComponent implements OnInit {\n  /**\n   * Fallback URL to load when the image url fails to load or does not exist.\n   */\n  @Input() fallbackUrl: string = this.config.fallbackUrl;\n  /**\n   * Whether to show a spinner while the image loads\n   */\n  @Input() spinner: boolean = this.config.spinnerEnabled;\n  /**\n   * Whether to show the fallback image instead of a spinner while the image loads\n   */\n\n  @Input() fallbackAsPlaceholder: boolean = this.config.fallbackAsPlaceholder;\n\n  /**\n   * Use <img> tag\n   */\n  @Input()\n  set useImg(val: boolean) {\n    this._useImg = val !== false;\n  }\n\n  private _useImg: boolean = this.config.useImg;\n\n\n  /**\n   * Attributes to pass through to img tag if _useImg == true\n   */\n  @Input('imgAttributes') imgAttributes: ImageAttribute[] = [];\n\n  /**\n   * Convenience attribute to disable caching\n   * @param val\n   */\n  @Input()\n  set noCache(val: boolean) {\n    this.cache = val !== false;\n  }\n\n  /**\n   * Enable/Disable caching\n   * @type {boolean}\n   */\n  @Input() cache = true;\n\n  /**\n   * The URL of the image to load.\n   */\n  @Input()\n  set src(imageUrl: string) {\n    this._src = this.processImageUrl(imageUrl);\n    this.updateImage(this._src);\n  };\n\n  get src(): string {\n    return this._src;\n  }\n\n  private _src: string;\n  /**\n   * Width of the image. This will be ignored if using useImg.\n   */\n  @Input() width: string = this.config.width;\n  /**\n   * Height of the image. This will be ignored if using useImg.\n   */\n  @Input() height: string = this.config.height;\n  /**\n   * Display type of the image. This will be ignored if using useImg.\n   */\n  @Input() display: string = this.config.display;\n  /**\n   * Background size. This will be ignored if using useImg.\n   */\n  @Input() backgroundSize: string = this.config.backgroundSize;\n  /**\n   * Background repeat. This will be ignored if using useImg.\n   */\n  @Input() backgroundRepeat: string = this.config.backgroundRepeat;\n  /**\n   * Name of the spinner\n   */\n  @Input() spinnerName: string = this.config.spinnerName;\n  /**\n   * Color of the spinner\n   */\n  @Input() spinnerColor: string = this.config.spinnerColor;\n  /**\n   * Notify on image load..\n   */\n  @Output()\n  load: EventEmitter<ImgLoaderComponent> = new EventEmitter<ImgLoaderComponent>();\n  /**\n   * Indicates if the image is still loading\n   * @type {boolean}\n   */\n  isLoading = true;\n  element: HTMLElement;\n\n\n  constructor(\n    private _element: ElementRef,\n    private renderer: Renderer2,\n    private imageLoader: ImageLoader,\n    private config: ImageLoaderConfig,\n  ) {\n  }\n\n  ngOnInit(): void {\n    if (this.fallbackAsPlaceholder && this.fallbackUrl) {\n      this.setImage(this.fallbackUrl, false);\n    }\n\n    if (!this.src) {\n      // image url was not passed\n      // this can happen when [src] is set to a variable that turned out to be undefined\n      // one example could be a list of users with their profile pictures\n      // in this case, it would be useful to use the fallback image instead\n      // if fallbackUrl was used as placeholder we do not need to set it again\n      if (!this.fallbackAsPlaceholder && this.fallbackUrl) {\n        // we're not going to cache the fallback image since it should be locally saved\n        this.setImage(this.fallbackUrl);\n      } else {\n        this.isLoading = false;\n      }\n    }\n  }\n\n  private updateImage(imageUrl: string) {\n    this.imageLoader\n      .getImagePath(imageUrl)\n      .then((url: string) => this.setImage(url))\n      .catch((error: any) => this.setImage(this.fallbackUrl || imageUrl));\n  }\n\n  /**\n   * Gets the image URL to be loaded and disables caching if necessary\n   * @returns {string}\n   */\n  private processImageUrl(imageUrl: string): string {\n    if (this.cache === false) {\n      // need to disable caching\n\n      if (imageUrl.indexOf('?') === -1) {\n        // add ? if doesn't exists\n        imageUrl += '?';\n      }\n\n      if (['&', '?'].indexOf(imageUrl.charAt(imageUrl.length)) === -1) {\n        // add & if necessary\n        imageUrl += '&';\n      }\n\n      // append timestamp at the end to make URL unique\n      imageUrl += 'cache_buster=' + Date.now();\n    }\n\n    return imageUrl;\n  }\n\n  /**\n   * Set the image to be displayed\n   * @param imageUrl {string} image src\n   * @param stopLoading {boolean} set to true to mark the image as loaded\n   */\n  private setImage(imageUrl: string, stopLoading: boolean = true): void {\n    this.isLoading = !stopLoading;\n\n    if (this._useImg) {\n      // Using <img> tag\n      if (!this.element) {\n        // create img element if we dont have one\n        this.element = this.renderer.createElement('img');\n        this.renderer.appendChild(this._element.nativeElement, this.element);\n      }\n\n      // set it's src\n      this.renderer.setAttribute(this.element, 'src', imageUrl);\n\n      // if imgAttributes are defined, add them to our img element\n      this.imgAttributes.forEach((attribute) => {\n        this.renderer.setAttribute(this.element, attribute.element, attribute.value);\n      });\n      if (this.fallbackUrl && !this.imageLoader.nativeAvailable) {\n        this.renderer.listen(this.element, 'error', () =>\n          this.renderer.setAttribute(this.element, 'src', this.fallbackUrl),\n        );\n      }\n    } else {\n      // Not using <img> tag\n\n      this.element = this._element.nativeElement;\n\n      for (const prop in propMap) {\n        if (this[prop]) {\n          this.renderer.setStyle(this.element, propMap[prop], this[prop]);\n        }\n      }\n\n      this.renderer.setStyle(\n        this.element,\n        'background-image',\n        `url(\"${imageUrl || this.fallbackUrl}\")`,\n      );\n    }\n\n    this.load.emit(this);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/ionic-image-loader/src/components/img-loader.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { NgModule } from '@angular/core';\nimport { IonicApp, IonicModule } from 'ionic-angular';\nimport { MyApp } from './app.component';\nimport { IonicImageLoader } from '../ionic-image-loader/src/';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { BrowserModule } from '@angular/platform-browser';\n\n@NgModule({\n  declarations: [\n    MyApp,\n  ],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(MyApp, {}, \n{\n  links: [\n    { loadChildren: '../pages/avatars/avatars.module#Module', name: 'avatars-page', segment: 'avatars', priority: 'low', defaultHistory: ['home-page'] },\n    { loadChildren: '../pages/cards/cards.module#Module', name: 'cards-page', segment: 'cards', priority: 'low', defaultHistory: ['home-page'] },\n    { loadChildren: '../pages/concurrency/concurrency.module#Module', name: 'concurrency-page', segment: 'concurrency', priority: 'low', defaultHistory: ['home-page'] },\n    { loadChildren: '../pages/home/home.module#Module', name: 'home-page', segment: 'home', priority: 'low', defaultHistory: [] },\n    { loadChildren: '../pages/ng-content/ng-content.module#NgContentPageModule', name: 'ng-content-page', segment: 'ng-content', priority: 'low', defaultHistory: ['home-page'] },\n    { loadChildren: '../pages/slider/slider.module#Module', name: 'slider-page', segment: 'slider', priority: 'low', defaultHistory: ['home-page'] },\n    { loadChildren: '../pages/virtual-scroll/virtual-scroll.module#Module', name: 'virtual-scroll-page', segment: 'virtual-scroll', priority: 'low', defaultHistory: ['home-page'] }\n  ]\n}),\n    IonicImageLoader.forRoot()\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n  ],\n  providers: [\n    SplashScreen,\n    StatusBar\n  ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { HttpClientModule }              from '@angular/common/http';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { File }                          from '@ionic-native/file';\nimport { IonicModule }                   from 'ionic-angular';\n\nimport { ImgLoaderComponent } from './components/img-loader';\nimport { ImageLoader }        from './providers/image-loader';\nimport { ImageLoaderConfig }  from './providers/image-loader-config';\n\n@NgModule({\n  declarations: [\n    ImgLoaderComponent,\n  ],\n  imports: [\n    IonicModule,\n    HttpClientModule,\n  ],\n  exports: [\n    ImgLoaderComponent,\n  ],\n})\nexport class IonicImageLoader {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: IonicImageLoader,\n      providers: [\n        ImageLoaderConfig,\n        ImageLoader,\n        File,\n      ],\n    };\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/ionic-image-loader/src/image-loader.module.ts","import { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { ImageLoaderConfig } from '../ionic-image-loader/src/';\n\n@Component({\n  template: `<ion-nav root=\"home-page\"></ion-nav>`\n})\nexport class MyApp {\n\n  constructor(\n    platform: Platform,\n    imageLoaderConfig: ImageLoaderConfig,\n    statusBar: StatusBar\n  ) {\n\n    platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      statusBar.styleDefault();\n    });\n\n\n    // enable debug mode to get console logs and stuff\n    imageLoaderConfig.enableDebugMode();\n    // set a fallback url to use by default in case an image is not found\n    imageLoaderConfig.setFallbackUrl('assets/fallback.png');\n\n    imageLoaderConfig.setImageReturnType('base64');\n\n    imageLoaderConfig.setSpinnerColor('secondary');\n    imageLoaderConfig.setSpinnerName('bubbles');\n\n\n    imageLoaderConfig.maxCacheSize = 2 * 1024 * 1024; // 2 MB\n    imageLoaderConfig.maxCacheAge = 60 * 1000; // 1 minute\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ImageLoaderConfig {\n  debugMode = false;\n\n  spinnerEnabled = true;\n\n  fallbackAsPlaceholder = false;\n\n  backgroundSize = 'contain';\n\n  backgroundRepeat = 'no-repeat';\n\n  display = 'block';\n\n  width = '100%';\n\n  height = '100%';\n\n  useImg = false;\n\n  fallbackUrl;\n\n  concurrency = 5;\n\n  maxCacheSize = -1;\n\n  maxCacheAge = -1;\n\n  imageReturnType: 'base64' | 'uri' = 'uri';\n\n  spinnerName;\n\n  spinnerColor;\n\n  httpHeaders: HttpHeaders;\n\n  fileNameCachedWithExtension = false;\n\n  fallbackFileNameCachedExtension = '.jpg';\n\n  private _cacheDirectoryName = 'image-loader-cache';\n\n  get cacheDirectoryName() {\n    return this._cacheDirectoryName;\n  }\n\n  set cacheDirectoryName(name) {\n    name.replace(/\\W/g, '');\n    this._cacheDirectoryName = name;\n  }\n\n  /**\n   * Enables debug mode to receive console logs, errors, warnings\n   */\n  enableDebugMode(): void {\n    this.debugMode = true;\n  }\n\n  /**\n   * Enable/Disable the spinner by default. Defaults to true.\n   * @param {boolean} enable set to true to enable\n   */\n  enableSpinner(enable: boolean): void {\n    this.spinnerEnabled = enable;\n  }\n\n  /**\n   * Enable/Disable the fallback image as placeholder instead of the spinner. Defaults to false.\n   * @param {boolean} enable set to true to enable\n   */\n  enableFallbackAsPlaceholder(enable: boolean): void {\n    this.fallbackAsPlaceholder = enable;\n  }\n\n  /**\n   * Sets the cache directory name. Defaults to 'image-loader-cache'\n   * @param {string} name name of directory\n   */\n  setCacheDirectoryName(name: string): void {\n    this.cacheDirectoryName = name;\n  }\n\n  /**\n   * Set default height for images that are not using <img> tag\n   * @param {string} height height\n   */\n  setHeight(height: string): void {\n    this.height = height;\n  }\n\n  /**\n   * Set default width for images that are not using <img> tag\n   * @param {string} width Width\n   */\n  setWidth(width: string): void {\n    this.width = width;\n  }\n\n  /**\n   * Enable display mode for images that are not using <img> tag\n   * @param {string} display Display mode\n   */\n  setDisplay(display: string): void {\n    this.display = display;\n  }\n\n  /**\n   * Use <img> tag by default\n   * @param {boolean} use set to true to use <img> tag by default\n   */\n  useImageTag(use: boolean): void {\n    this.useImg = use;\n  }\n\n  /**\n   * Set default background size for images that are not using <img> tag\n   * @param {string} backgroundSize Background size\n   */\n  setBackgroundSize(backgroundSize: string): void {\n    this.backgroundSize = backgroundSize;\n  }\n\n  /**\n   * Set background repeat for images that are not using <img> tag\n   * @param {string} backgroundRepeat Background repeat\n   */\n  setBackgroundRepeat(backgroundRepeat: string): void {\n    this.backgroundRepeat = backgroundRepeat;\n  }\n\n  /**\n   * Set fallback URL to use when image src is undefined or did not resolve.\n   * This image will not be cached. This should ideally be a locally saved image.\n   * @param {string} fallbackUrl The remote or local URL of the image\n   */\n  setFallbackUrl(fallbackUrl: string): void {\n    this.fallbackUrl = fallbackUrl;\n  }\n\n  /**\n   * Set the maximum number of allowed connections at the same time.\n   * @param {number} concurrency\n   */\n  setConcurrency(concurrency: number): void {\n    this.concurrency = concurrency;\n  }\n\n  /**\n   * Sets the maximum allowed cache size\n   * @param {number} cacheSize Cache size in bytes\n   */\n  setMaximumCacheSize(cacheSize: number): void {\n    this.maxCacheSize = cacheSize;\n  }\n\n  /**\n   * Sets the maximum allowed cache age\n   * @param {number} cacheAge Maximum cache age in milliseconds\n   */\n  setMaximumCacheAge(cacheAge: number): void {\n    this.maxCacheAge = cacheAge;\n  }\n\n  /**\n   * Set the return type of cached images\n   * @param imageReturnType {string} The return type; either 'base64' or 'uri'\n   */\n  setImageReturnType(imageReturnType: 'base64' | 'uri'): void {\n    this.imageReturnType = imageReturnType;\n  }\n\n  /**\n   * Set the default spinner name\n   * @param {string} name\n   */\n  setSpinnerName(name: string): void {\n    this.spinnerName = name;\n  }\n\n  /**\n   * Set the default spinner color\n   * @param {string} color\n   */\n  setSpinnerColor(color: string): void {\n    this.spinnerColor = color;\n  }\n\n  /**\n   * Set headers options for the HttpClient transfers.\n   * @param {HttpHeaders} headers\n   */\n  setHttpHeaders(headers: HttpHeaders): void {\n    this.httpHeaders = headers;\n  }\n\n  /**\n   * Set options for the FileTransfer plugin\n   * @param options\n   * @deprecated FileTransfer plugin removed.\n   */\n  setFileTransferOptions(options: {\n    trustAllHosts: boolean;\n    [key: string]: any;\n  }): void {\n    // do nothing, plugin deprecated.\n  }\n\n  /**\n   * Enable/Disable the save filename of cached images with extension.  Defaults to false.\n   * @param {boolean} enable set to true to enable\n   */\n  setFileNameCachedWithExtension(enable: boolean) {\n    this.fileNameCachedWithExtension = enable;\n  }\n\n  /**\n   * Set fallback extension filename of cached images.  Defaults to '.jpg'.\n   * @param {string} extension fallback extension (e.x .jpg)\n   */\n  setFallbackFileNameCachedExtension(extension: string) {\n    this.fallbackFileNameCachedExtension = extension;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/ionic-image-loader/src/providers/image-loader-config.ts"],"sourceRoot":""}